---


name: Drifting Grating Stimulus
signature: stimulus/drifting_grating
isa: [Colored Transform Stimulus, Dynamic Stimulus Base]
description: A drifting grating stimulus
parameters: 
  - 
    name: direction
    default: 0.0
    description: Direction of drift (degrees)
  - 
    name: central_starting_phase
    description: |
        Starting phase at the grating's center (degrees).

        Only one of central_starting_phase and `starting_phase`_ may be
        specified.  If both are omitted, the grating will behave as if
        starting_phase were set to zero.  Because the interpretation of
        starting_phase is often unintuitive and generally unhelpful, it is
        recommended that grating definitions always include
        central_starting_phase.
  - 
    name: starting_phase
    deprecated: yes
    description: >
        Starting phase (degrees) at the "starting" edge of the grating.  Exactly
        what constitutes the starting edge depends on `direction`_, `x_size`_,
        and `y_size`_ in a manner that is often unintuitive and generally
        unhelpful. Please use `central_starting_phase`_ instead.
  - 
    name: spatial_frequency
    required: yes
    example: 1
    description: Spatial frequency (cycles per degree)
  - 
    name: speed
    required: yes
    example: 1
    description: Drift speed (degrees per second)
  - 
    name: compute_phase_incrementally
    default: 'NO'
    description: |
        If ``NO``, the current phase of the grating is computed from
        `central_starting_phase`_/`starting_phase`_, `spatial_frequency`_,
        `speed`_, and the total time elapsed  since the stimulus started
        playing.

        If ``YES``, the current phase is computed from the previous phase (i.e.
        the phase when the stimulus was last drawn), `spatial_frequency`_,
        `speed`_, and the time elapsed since the previous phase was computed.

        This parameter is relevant only when the stimulus is `live queued <Live
        Queue Stimulus>` and the values of
        `central_starting_phase`_/`starting_phase`_, `spatial_frequency`_,
        and/or `speed`_ are changed while the stimulus is playing.  Most
        notably, if the parameter's value is ``NO``, then changes to `speed`_
        will cause a discontinuous jump in phase.  If the value is ``YES``, then
        changes to `speed`_ will be smooth, with no phase jump.

  - 
    name: grating_type
    required: yes
    options: [sinusoid, square, triangle, sawtooth]
    description: Grating type
  - 
    name: mask
    default: 'NO'
    description: |
        If ``YES``, the grating will function as a mask (similar to a `Mask
        Stimulus`).  When used as part of a `layer <Layer Stimulus>`, "high"
        regions of the grating (where the value is close to one) will allow
        stimuli beneath it in the layer to show through, while "low" regions
        (where the value is near zero) will partially or fully erase such
        stimuli, exposing any stimuli beneath the layer.

        When the value of this parameter is ``YES``, `color`_,
        `alpha_multiplier`_, `source_blend_factor`_, `dest_blend_factor`_
        `source_alpha_blend_factor`_, and `dest_alpha_blend_factor`_ are
        ignored.

        *Note*: For compatibility with existing experiments, the value of this
        parameter can also be one of ``rectangle``, ``ellipse``, or
        ``gaussian``, in which case it specifies the type of mask to apply to
        the grating.  However, this usage is deprecated, and new experiments
        should use a `Mask Stimulus` instead.
  -
    name: inverted
    default: 'NO'
    description: >
        If ``YES``, all grating values are inverted, e.g. high values become
        low, and low values become high
  - 
    name: std_dev
    default: 1.0
    deprecated: yes
    description: |
        Standard deviation of Gaussian mask.

        The Gaussian mask is computed on a 2x2 square, centered at the origin,
        using the equation::

            exp(-1.0 * (dist - mean) * (dist - mean) / (2.0 * std_dev * std_dev))

        where ``dist`` is distance from the center.  The mask is then stretched
        to cover a rectangle of `x_size`_ by `y_size`_ degrees.  If the x and y
        sizes are equal, then the mask is scaled by size/2 in both directions,
        so std_dev has units of size/2 degrees.
  - 
    name: mean
    default: 0.0
    deprecated: yes
    description: |
        Mean of Gaussian mask.

        This value determines the radial offset of the Gaussian peak from the
        center of the grating.  If non-zero, the peak will be a circle, rather
        than a point, and luminance will decrease both inside and outside the
        circle, producing a toroidal stimulus.
  -
    name: normalized
    default: 'YES'
    deprecated: yes
    description: >
        If ``YES``, the Gaussian mask includes a multiplicative normalization
        term (``1/(std_dev*sqrt(2*pi))``).  If ``NO``, this term is omitted.


