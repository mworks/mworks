//
// This test uses render_actions to draw a single stimulus multiple times,
// with different parameters each time, in a single rendering pass.
//
// Doing this probably isn't a great idea, but it is possible!
//


var color_red = 0
var color_green = 0
var color_blue = 0
var x_pos = 0
var y_pos = 0

var elapsed_time = 0
var ball_index = 0

%define num_balls = 3
%define orbital_radius = 7
%define theta = 2 * pi() * (elapsed_time / 5s + ball_index / num_balls)

render_actions begin_update {
    ball_index = 0
}

render_actions set_params (elapsed_time = elapsed_time) {
    // Set color
    color_red = (int)(ball_index == 0)
    color_green = (int)(ball_index == 1)
    color_blue = (int)(ball_index == 2)

    // Set position
    x_pos = orbital_radius * cos(theta)
    y_pos = orbital_radius * sin(theta)

    bring_stimulus_to_front (finish_update)
}

circle ball (
    color = color_red, color_green, color_blue
    x_size = 10
    x_position = x_pos
    y_position = y_pos
    )

render_actions finish_update {
    ball_index += 1
    if (ball_index < num_balls) {
        bring_stimulus_to_front (set_params)
        bring_stimulus_to_front (ball)
    }
}


protocol {
    queue_stimulus (begin_update)
    queue_stimulus (set_params)
    live_queue_stimulus (ball)
    queue_stimulus (finish_update)

    update_display ()
    wait (30s)
}
