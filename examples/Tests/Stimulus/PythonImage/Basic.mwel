resource ('background.gz')
python_file ('image_gen.py')


var pixel_buffer_format = 'RGB8'
var pixel_buffer_width = 768
var pixel_buffer_height = 512
var elapsed_time = 0
var period = 8s

python_image image (
    pixel_buffer_format = pixel_buffer_format
    pixel_buffer_width = pixel_buffer_width
    pixel_buffer_height = pixel_buffer_height
    pixel_buffer_expr = 'render()'
    elapsed_time = elapsed_time
    x_size = 20
    deferred = explicit
    )


var elapsed_time_with_pause = 0
var paused = false
var done = false

render_actions pause_unpause (elapsed_time = elapsed_time_with_pause) {
    choose {
        when (elapsed_time_with_pause >= 2.25 * period) {
            if (not done) {
                done = true
            }
        }
        when (elapsed_time_with_pause >= period) {
            if (paused) {
                unpause_dynamic_stimulus (image)
                paused = false
            }
        }
        when (elapsed_time_with_pause >= 0.75 * period) {
            if (not paused) {
                pause_dynamic_stimulus (image)
                paused = true
            }
        }
    }
}


%define test_format (format)
    pixel_buffer_format = format
    paused = false
    done = false

    run_python_string ('reset()')
    load_stimulus (image)

    queue_stimulus (pause_unpause)
    queue_stimulus (image)
    update_display ()

    wait_for_condition (
        condition = done
        timeout = 2.5 * period
        )

    dequeue_stimulus (image)
    dequeue_stimulus (pause_unpause)
    update_display ()

    unload_stimulus (image)

    wait (1s)
%end


protocol {
    test_format ('RGB8')
    test_format ('sRGB8')
    test_format ('RGBA8')
    test_format ('sRGBA8')
    test_format ('RGBA16F')
}
