stimulus_display d1 (
    display_info = {
        'display_to_use': 1,
        'width': 400,
        'height': 300,
        'distance': 100
        }
    background_color = 1,0,0
    )

stimulus_display d2 (
    display_info = {
        'display_to_use': -1,
        'width': 300,
        'height': 400,
        'distance': 100,
        'mirror_window_base_height': 500
        }
    background_color = 0,1,0
    )


var d1_bounds = 0
var d2_bounds = 0


%define check_bounds (bounds)
    assert (size(bounds) == 4)

    assert (bounds['left'] < 0)
    assert (bounds['right'] > 0)
    assert (bounds['left'] == -bounds['right'])

    assert (bounds['bottom'] < 0)
    assert (bounds['top'] > 0)
    assert (bounds['bottom'] == -bounds['top'])
%end


protocol {
    d1_bounds = display_bounds('d1')
    d2_bounds = display_bounds('d2')

    check_bounds (d1_bounds)
    check_bounds (d2_bounds)

    assert (display_bounds('d1', 'left') == d1_bounds['left'])
    assert (display_bounds('d1', 'right') == d1_bounds['right'])
    assert (display_bounds('d1', 'bottom') == d1_bounds['bottom'])
    assert (display_bounds('d1', 'top') == d1_bounds['top'])

    assert (display_bounds('d2', 'left') == d2_bounds['left'])
    assert (display_bounds('d2', 'right') == d2_bounds['right'])
    assert (display_bounds('d2', 'bottom') == d2_bounds['bottom'])
    assert (display_bounds('d2', 'top') == d2_bounds['top'])

    assert (d1_bounds != d2_bounds)
}
