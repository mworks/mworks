#!/usr/bin/env python3

import argparse
import os
import plistlib
import subprocess
import sys
import time


xcrun = '/usr/bin/xcrun'


def announce(msg, *args):
    sys.stderr.write((msg + '\n') % args)
    sys.stderr.flush()


def fail(msg, *args):
    announce('ERROR: ' + msg, *args)
    sys.exit(1)


def run_notarytool(image):
    cmd = [
        xcrun,
        'notarytool',
        'submit',
        image,
        '--keychain-profile', keychain_profile,
        '--wait',
        ]
    result = subprocess.run(cmd, stdin=subprocess.DEVNULL)
    if result.returncode != 0:
        fail('notarytool exited with status %d', result.returncode)


def run_stapler(image):
    result = subprocess.run([xcrun, 'stapler', 'staple', image])
    if result.returncode != 0:
        fail('stapler exited with status %d', result.returncode)


def main():
    global keychain_profile

    parser = argparse.ArgumentParser()
    parser.add_argument('--keychain-profile',
                        required = True,
                        help = ('name of keychain item containing '
                                'authentication credentials'))
    parser.add_argument('image', help='installer disk image to notarize')

    args = parser.parse_args()
    keychain_profile = args.keychain_profile
    image = args.image

    announce('Notarizing %r...', image)
    run_notarytool(image)
    announce('Notarization succeeded')

    announce('Attaching notarization ticket to %r...', image)
    run_stapler(image)

    announce('Done!')


if __name__ == '__main__':
    main()
