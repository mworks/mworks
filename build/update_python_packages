#!/bin/zsh

#
# If pip is not installed or fails to run, install it manually:
#
#   curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
#   /Library/Frameworks/Python.framework/Versions/3.X/bin/python3 get-pip.py --no-warn-script-location
#

/usr/bin/xcrun xcodebuild -showBuildSettings -project ../supporting_libs/SupportingLibs.xcodeproj | \
while read setting_name setting_sep setting_value; do
    case "$setting_name" in
        MW_PYTHON_3)
            mw_python_3="$setting_value"
            ;;

        MW_PYTHON_3_VERSION)
            mw_python_3_version="$setting_value"
            ;;

        *)
            ;;
    esac
done

# Confirm that MWorks' "official" Python 3 version is installed
if [[ ! -f "$mw_python_3" ]]; then
    /bin/cat >&2 <<EOF
Required Python version not found.  Please download and install the latest
release of Python $mw_python_3_version from https://www.python.org/downloads/ .
EOF
    exit 1
fi

for python3 in /Library/Frameworks/Python.framework/Versions/3.*/bin/python3; do
    pip3_install=( $python3 -m pip install --upgrade --upgrade-strategy eager --no-warn-script-location )

    $python3 -V || exit
    echo '------------'

    # Ensure we have the latest pip, setuptools, and wheel.  Don't pass --user,
    # because these packages are normally installed inside the Python framework,
    # and we want to upgrade them there.
    $pip3_install pip setuptools wheel || exit

    # All Python 3 versions need msgpack and numpy, because these are used by
    # the Python tools unit tests
    $pip3_install --user msgpack numpy || exit

    # The remaining packages are needed only by MWorks' "official" Python 3
    # version
    if [[ "$python3" == "$mw_python_3" ]]; then
        $pip3_install --user pyaml Sphinx || exit
    fi
    echo
done
