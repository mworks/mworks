diff -ur Python-3.8.0/Modules/Setup Python/Modules/Setup
--- Python-3.8.0/Modules/Setup	2019-10-14 09:34:47.000000000 -0400
+++ Python/Modules/Setup	2019-11-01 14:55:58.000000000 -0400
@@ -170,7 +170,7 @@
 #cmath cmathmodule.c _math.c # -lm # complex math library functions
 #math mathmodule.c _math.c # -lm # math library functions, e.g. sin()
 #_contextvars _contextvarsmodule.c  # Context Variables
-#_struct _struct.c	# binary structure packing/unpacking
+_struct _struct.c	# binary structure packing/unpacking
 #_weakref _weakref.c	# basic weak reference support
 #_testcapi _testcapimodule.c    # Python C API test module
 #_testinternalcapi _testinternalcapi.c -I$(srcdir)/Include/internal -DPy_BUILD_CORE_MODULE  # Python internal C API test module
@@ -184,7 +184,7 @@
 #_json -I$(srcdir)/Include/internal -DPy_BUILD_CORE_BUILTIN _json.c	# _json speedups
 #_statistics _statisticsmodule.c # statistics accelerator
 
-#unicodedata unicodedata.c    # static Unicode character database
+unicodedata unicodedata.c    # static Unicode character database
 
 
 # Modules with some UNIX dependencies -- on by default:
diff -ur Python-3.8.0/Modules/_decimal/libmpdec/mpdecimal.h Python/Modules/_decimal/libmpdec/mpdecimal.h
--- Python-3.8.0/Modules/_decimal/libmpdec/mpdecimal.h	2019-10-14 09:34:47.000000000 -0400
+++ Python/Modules/_decimal/libmpdec/mpdecimal.h	2019-11-01 14:55:58.000000000 -0400
@@ -135,6 +135,9 @@
   #elif defined(__x86_64__)
     #define CONFIG_64
     #define ASM
+  #elif defined(__arm64__)
+    #define CONFIG_64
+    #define ANSI
   #else
     #error "unknown architecture for universal build."
   #endif
diff -ur Python-3.8.0/Modules/posixmodule.c Python/Modules/posixmodule.c
--- Python-3.8.0/Modules/posixmodule.c	2019-10-14 09:34:47.000000000 -0400
+++ Python/Modules/posixmodule.c	2019-11-01 14:55:58.000000000 -0400
@@ -210,7 +210,7 @@
 #define HAVE_KILL       1
 #define HAVE_OPENDIR    1
 #define HAVE_PIPE       1
-#define HAVE_SYSTEM     1
+/* #define HAVE_SYSTEM     1 */ /* system is prohibited on iOS */
 #define HAVE_WAIT       1
 #define HAVE_TTYNAME    1
 #endif  /* _MSC_VER */
diff -ur Python-3.8.0/Python/bootstrap_hash.c Python/Python/bootstrap_hash.c
--- Python-3.8.0/Python/bootstrap_hash.c	2019-10-14 09:34:47.000000000 -0400
+++ Python/Python/bootstrap_hash.c	2019-11-01 14:55:58.000000000 -0400
@@ -197,6 +197,9 @@
 #elif defined(HAVE_GETENTROPY)
 #define PY_GETENTROPY 1
 
+/* getentropy is available on iOS, even though sys/random.h is missing */
+int getentropy(void* buffer, size_t size);
+
 /* Fill buffer with size pseudo-random bytes generated by getentropy():
 
    - Return 1 on success
diff -ur Python-3.8.0/configure Python/configure
--- Python-3.8.0/configure	2019-10-14 09:34:47.000000000 -0400
+++ Python/configure	2019-11-01 15:00:32.000000000 -0400
@@ -2934,7 +2934,9 @@
 if test "$cross_compiling" = yes; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for python interpreter for cross build" >&5
 $as_echo_n "checking for python interpreter for cross build... " >&6; }
-    if test -z "$PYTHON_FOR_BUILD"; then
+    if test -n "$PYTHON_FOR_BUILD"; then
+        interp="$PYTHON_FOR_BUILD"
+    else
         for interp in python$PACKAGE_VERSION python3 python; do
 	    which $interp >/dev/null 2>&1 || continue
 	    if $interp -c "import sys;sys.exit(not '.'.join(str(n) for n in sys.version_info[:2]) == '$PACKAGE_VERSION')"; then
@@ -2947,8 +2949,8 @@
 	fi
         { $as_echo "$as_me:${as_lineno-$LINENO}: result: $interp" >&5
 $as_echo "$interp" >&6; }
-	PYTHON_FOR_BUILD='_PYTHON_PROJECT_BASE=$(abs_builddir) _PYTHON_HOST_PLATFORM=$(_PYTHON_HOST_PLATFORM) PYTHONPATH=$(shell test -f pybuilddir.txt && echo $(abs_builddir)/`cat pybuilddir.txt`:)$(srcdir)/Lib _PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) '$interp
     fi
+	PYTHON_FOR_BUILD='_PYTHON_PROJECT_BASE=$(abs_builddir) _PYTHON_HOST_PLATFORM=$(_PYTHON_HOST_PLATFORM) PYTHONPATH=$(shell test -f pybuilddir.txt && echo $(abs_builddir)/`cat pybuilddir.txt`:)$(srcdir)/Lib _PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) '$interp
 elif test "$cross_compiling" = maybe; then
     as_fn_error $? "Cross compiling required --host=HOST-TUPLE and --build=ARCH" "$LINENO" 5
 else
@@ -3005,7 +3007,7 @@
 
 
 
-define_xopen_source=yes
+define_xopen_source=no
 
 # Arguments passed to configure.
 
@@ -3271,6 +3273,9 @@
 	*-*-cygwin*)
 		ac_sys_system=Cygwin
 		;;
+	*-*-darwin*)
+		ac_sys_system=Darwin
+		;;
 	*-*-vxworks*)
 	    ac_sys_system=VxWorks
 	    ;;
@@ -3321,6 +3326,9 @@
 	*-*-cygwin*)
 		_host_cpu=
 		;;
+	*-*-darwin*)
+		_host_cpu=$host_cpu
+		;;
 	*-*-vxworks*)
 		_host_cpu=$host_cpu
 		;;
@@ -6158,13 +6166,13 @@
   fi
 fi
 
-if test "$cross_compiling" = yes; then
-    case "$READELF" in
-	readelf|:)
-	as_fn_error $? "readelf for the host is required for cross builds" "$LINENO" 5
-	;;
-    esac
-fi
+#if test "$cross_compiling" = yes; then
+#    case "$READELF" in
+#	readelf|:)
+#	as_fn_error $? "readelf for the host is required for cross builds" "$LINENO" 5
+#	;;
+#    esac
+#fi
 
 
 
diff -ur Python-3.8.0/pyconfig.h.in Python/pyconfig.h.in
--- Python-3.8.0/pyconfig.h.in	2019-10-14 09:34:47.000000000 -0400
+++ Python/pyconfig.h.in	2019-11-01 14:55:58.000000000 -0400
@@ -134,7 +134,7 @@
 #undef HAVE_CLOCK_GETTIME
 
 /* Define to 1 if you have the `clock_settime' function. */
-#undef HAVE_CLOCK_SETTIME
+/* #undef HAVE_CLOCK_SETTIME */ /* clock_settime is prohibited on iOS */
 
 /* Define if the C compiler supports computed gotos. */
 #undef HAVE_COMPUTED_GOTOS
diff -ur Python-3.8.0/setup.py Python/setup.py
--- Python-3.8.0/setup.py	2019-10-14 09:34:47.000000000 -0400
+++ Python/setup.py	2019-11-01 14:55:58.000000000 -0400
@@ -30,6 +30,8 @@
 def get_platform():
     # Cross compiling
     if "_PYTHON_HOST_PLATFORM" in os.environ:
+        if os.environ["_PYTHON_HOST_PLATFORM"].startswith('darwin'):
+            return 'darwin'
         return os.environ["_PYTHON_HOST_PLATFORM"]
 
     # Get value of sys.platform
@@ -114,7 +116,10 @@
     for var_name in make_vars:
         var = sysconfig.get_config_var(var_name)
         if var is not None:
-            m = re.search(r'--sysroot=([^"]\S*|"[^"]+")', var)
+            if MACOS:
+                m = re.search(r'-isysroot\s+(\S+)', var)
+            else:
+                m = re.search(r'--sysroot=([^"]\S*|"[^"]+")', var)
             if m is not None:
                 sysroot = m.group(1).strip('"')
                 for subdir in subdirs:
